
CMAKE_MINIMUM_REQUIRED(VERSION 3.0)
PROJECT(ARPScanner VERSION 0.9.0)


# swp version setup.
SET(ARPSC_VERSION_MAJOR 0)
SET(ARPSC_VERSION_MINOR 9)
SET(ARPSC_VERSION_REVISION 0)
SET(ARPSC_VERSION_STATE b)
SET(ARPSC_VERSION ${ARPSC_VERSION_MAJOR}.${ARPSC_VERSION_MINOR}${ARPSC_VERSION_STATE}${ARPSC_VERSION_REVISION} )

# Set version preprocessor macros.
MESSAGE(STATUS "Version ${ARPSC_VERSION}")
ADD_DEFINITIONS(-DARPSC_MAJOR_VERSION=${ARPSC_VERSION_MAJOR})
ADD_DEFINITIONS(-DARPSC_MINOR_VERSION=${ARPSC_VERSION_MINOR})
ADD_DEFINITIONS(-DARPSC_REVISION_VERSION=${ARPSC_VERSION_REVISION})
ADD_DEFINITIONS(-DARPSC_STATE_VERSION=${ARPSC_VERSION_STATE})
ADD_DEFINITIONS(-DARPSC_STR_VERSION="${ARPSC_VERSION}")

# GCC compiler options.
IF((CMAKE_COMPILER_IS_GNUCC) AND NOT CMAKE_COMPILER_IS_MINGOW)
	ADD_DEFINITIONS(-fPIC)
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC")

	# Compiling language standard.
	ADD_DEFINITIONS(-std=c11)
	ADD_DEFINITIONS(-w)

	# Check build target.
	IF (CMAKE_BUILD_TYPE STREQUAL "Release")
		MESSAGE(STATUS "Compile for release.")
		ADD_DEFINITIONS(-DNDEBUG -O2)
		SET(CMAKE_RELEASE TRUE)
	ELSEIF( CMAKE_BUILD_TYPE STREQUAL "Debug")
		MESSAGE(STATUS "Compile for debug.")
		ADD_DEFINITIONS(-D_DEBUG)
		ADD_DEFINITIONS(-g3 -O0)
		SET(CMAKE_DEBUG TRUE)
	ENDIF()

ELSEIF("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
	# Compiling language standard.
	ADD_DEFINITIONS(-fPIC)
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC")
	ADD_DEFINITIONS(-std=c11)

		# Check build target.
	IF (CMAKE_BUILD_TYPE STREQUAL "Release")
		MESSAGE(STATUS "Compile for release.")
		ADD_DEFINITIONS(-DNDEBUG -O2)
		SET(CMAKE_RELEASE TRUE)
	ELSEIF( CMAKE_BUILD_TYPE STREQUAL "Debug")
		MESSAGE(STATUS "Compile for debug.")
		ADD_DEFINITIONS(-D_DEBUG)
		ADD_DEFINITIONS(-g3 -O0)
		SET(CMAKE_DEBUG TRUE)
	ENDIF()
	#
	ADD_DEFINITIONS(-w)

ELSEIF(MSVC)

		# Enable multi-core complication with MSVC
		ADD_DEFINITIONS(/MP)
ENDIF()

# Source files.
FILE (GLOB headers 	${CMAKE_CURRENT_SOURCE_DIR}/include/*.h)
FILE (GLOB source_files 	${CMAKE_CURRENT_SOURCE_DIR}/src/*.c)

ADD_EXECUTABLE(arpsc ${headers} ${source_files})
TARGET_LINK_LIBRARIES(arpsc pthread)
TARGET_INCLUDE_DIRECTORIES(arpsc PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/include)


# Add the install targets
INSTALL (TARGETS arpsc DESTINATION bin)
